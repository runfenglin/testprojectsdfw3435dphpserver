<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

use AppBundle\Entity\User;

/**
 * CheckinRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CheckinRepository extends EntityRepository
{
    public function getFriendCheckins(User $user)
    {
        $query = $entityManager->createNativeQuery(
            'SELECT c.* 
             FROM tr_activity c 
             JOIN tr_user u ON c.user_id = u.id
			 JOIN tr_friend f ON 
             JOIN ', $rsm);
$query->setParameter(1, 'romanb'); 
        
        /* $qb = $this->_em
                   ->createQueryBuilder()
                   ->select('c')
                   ->from($this->_entityName, 'c')
                   ->join('c.user', 'u')
                   ->join('u.myFriends', 'um', 'WITH', 'um.id = :userId') */
        //    ->setParameter('superCategoryName', $superCategoryName);
        //           ->where('um.id = :userId')
        //           ->orWhere('uf.id = :userId')
         //          ->setParameter('userId', $user->getId())
         //          ->setParameter('userId', $user->getId())
		//		   ->getQuery();
		//		var_dump($qb->getSQL());
				//   ->getQuery()
                //   ->getResult();
    /*  $qb = $this->_em
                   ->createQueryBuilder()
                   ->select('c')
                   ->from($this->_entityName, 'c')
                   ->join('c.user', 'cu')
                   ->join('cu.myFriends');

        if($user->getUpdateAt() instanceof \DateTime) {
            $qb->where('c.created > :datetime')
               ->setParameter('datetime', $user->getUpdateAt())
               ->andWhere('c.toUser = :toUser OR cp.user = :user');
        }
        else {
            $qb->where('c.toUser = :toUser OR cp.user = :user');
        }
        return $qb->setParameter('toUser', $user)
                  ->setParameter('user', $user)
                  ->getQuery()
                  ->getResult();*/
    }
}